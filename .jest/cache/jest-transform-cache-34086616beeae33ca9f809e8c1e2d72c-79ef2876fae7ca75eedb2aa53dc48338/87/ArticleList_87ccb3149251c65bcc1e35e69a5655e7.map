{"version":3,"names":["_react","_interopRequireWildcard","require","_reactNative","_ArticleList","_CardArticleComponent","_interopRequireDefault","_jsxRuntime","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ArticleList","_ref","data","onRefresh","_useState","useState","_useState2","_slicedToArray2","refreshing","setRefreshing","handleRefresh","_ref2","_asyncToGenerator2","apply","arguments","jsx","Container","children","FlatList","renderItem","_ref3","item","SingleArticle","fetchList","keyExtractor","index","_default","exports"],"sources":["ArticleList.tsx"],"sourcesContent":["import React, {useState} from 'react';\r\nimport {FlatList} from 'react-native';\r\nimport {Container} from './ArticleList.styles';\r\nimport CardArticleComponent from '../CardArticleComponent/CardArticleComponent';\r\nimport {ArticleListProps} from './ArticleList.types';\r\n\r\nconst ArticleList: React.FC<ArticleListProps> = ({data, onRefresh}) => {\r\n  const [refreshing, setRefreshing] = useState(false);\r\n\r\n  const handleRefresh = async () => {\r\n    setRefreshing(true);\r\n    await onRefresh();\r\n    setRefreshing(false);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <FlatList\r\n        data={data}\r\n        renderItem={({item}) => (\r\n          <CardArticleComponent SingleArticle={item} fetchList={onRefresh} />\r\n        )}\r\n        keyExtractor={(item, index) => 'key' + index}\r\n        refreshing={refreshing}\r\n        onRefresh={handleRefresh}\r\n      />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ArticleList;\r\n"],"mappings":"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","ignoreList":[]}