a7457121fbe60c42fa5857bf00403ae2
var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));
var _react = _interopRequireDefault(require("react"));
var _native = require("@react-navigation/native");
var _CardArticleComponent = require("./CardArticleComponent.styles");
var _convertTime = require("../../utils/convertTime");
var _themed = require("@rneui/themed");
var _asyncStorage = _interopRequireDefault(require("@react-native-async-storage/async-storage"));
var _jsxRuntime = require("react/jsx-runtime");
var deleteArticle = function () {
  var _ref = (0, _asyncToGenerator2.default)(function* (SingleArticle, fetchList) {
    var currentArray = JSON.parse(yield _asyncStorage.default.getItem('deletedArticles')) || [];
    currentArray.push(SingleArticle.story_id);
    yield _asyncStorage.default.setItem('deletedArticles', JSON.stringify(currentArray));
    fetchList();
  });
  return function deleteArticle(_x, _x2) {
    return _ref.apply(this, arguments);
  };
}();
var SwipeAction = function SwipeAction(_ref2) {
  var SingleArticle = _ref2.SingleArticle,
    fetchList = _ref2.fetchList;
  return (0, _jsxRuntime.jsx)(_themed.Button, {
    containerStyle: {
      flex: 1,
      justifyContent: 'center',
      backgroundColor: '#f4f4f4'
    },
    type: "clear",
    icon: {
      name: 'delete-outline'
    },
    onPress: (0, _asyncToGenerator2.default)(function* () {
      return yield deleteArticle(SingleArticle, fetchList);
    })
  });
};
var CardArticleComponent = function CardArticleComponent(_ref4) {
  var SingleArticle = _ref4.SingleArticle,
    fetchList = _ref4.fetchList;
  var navigation = (0, _native.useNavigation)();
  var handlePress = function handlePress() {
    navigation.navigate('SingleArticleScreen', {
      url: SingleArticle.url
    });
  };
  return (0, _jsxRuntime.jsx)(_themed.ListItem.Swipeable, {
    rightWidth: 90,
    rightContent: SwipeAction({
      SingleArticle: SingleArticle,
      fetchList: fetchList
    }),
    children: (0, _jsxRuntime.jsx)(_CardArticleComponent.CardContainer, {
      onPress: handlePress,
      children: (0, _jsxRuntime.jsxs)(_CardArticleComponent.SingleArticleCard, {
        children: [(0, _jsxRuntime.jsx)(_CardArticleComponent.CardTitle, {
          children: SingleArticle.title || SingleArticle.story_title
        }), (0, _jsxRuntime.jsx)(_CardArticleComponent.CardDivider, {}), (0, _jsxRuntime.jsxs)(_CardArticleComponent.CardSubTitle, {
          children: [SingleArticle.author, " -", ' ', (0, _convertTime.relativeTimeFromElapsed)(SingleArticle.created_at)]
        })]
      })
    })
  });
};
var _default = exports.default = CardArticleComponent;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3QiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIl9uYXRpdmUiLCJfQ2FyZEFydGljbGVDb21wb25lbnQiLCJfY29udmVydFRpbWUiLCJfdGhlbWVkIiwiX2FzeW5jU3RvcmFnZSIsIl9qc3hSdW50aW1lIiwiZGVsZXRlQXJ0aWNsZSIsIl9yZWYiLCJfYXN5bmNUb0dlbmVyYXRvcjIiLCJkZWZhdWx0IiwiU2luZ2xlQXJ0aWNsZSIsImZldGNoTGlzdCIsImN1cnJlbnRBcnJheSIsIkpTT04iLCJwYXJzZSIsIkFzeW5jU3RvcmFnZSIsImdldEl0ZW0iLCJwdXNoIiwic3RvcnlfaWQiLCJzZXRJdGVtIiwic3RyaW5naWZ5IiwiX3giLCJfeDIiLCJhcHBseSIsImFyZ3VtZW50cyIsIlN3aXBlQWN0aW9uIiwiX3JlZjIiLCJqc3giLCJCdXR0b24iLCJjb250YWluZXJTdHlsZSIsImZsZXgiLCJqdXN0aWZ5Q29udGVudCIsImJhY2tncm91bmRDb2xvciIsInR5cGUiLCJpY29uIiwibmFtZSIsIm9uUHJlc3MiLCJDYXJkQXJ0aWNsZUNvbXBvbmVudCIsIl9yZWY0IiwibmF2aWdhdGlvbiIsInVzZU5hdmlnYXRpb24iLCJoYW5kbGVQcmVzcyIsIm5hdmlnYXRlIiwidXJsIiwiTGlzdEl0ZW0iLCJTd2lwZWFibGUiLCJyaWdodFdpZHRoIiwicmlnaHRDb250ZW50IiwiY2hpbGRyZW4iLCJDYXJkQ29udGFpbmVyIiwianN4cyIsIlNpbmdsZUFydGljbGVDYXJkIiwiQ2FyZFRpdGxlIiwidGl0bGUiLCJzdG9yeV90aXRsZSIsIkNhcmREaXZpZGVyIiwiQ2FyZFN1YlRpdGxlIiwiYXV0aG9yIiwicmVsYXRpdmVUaW1lRnJvbUVsYXBzZWQiLCJjcmVhdGVkX2F0IiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiQ2FyZEFydGljbGVDb21wb25lbnQudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XHJcbmltcG9ydCB7TmF2aWdhdGlvblByb3AsIHVzZU5hdmlnYXRpb259IGZyb20gJ0ByZWFjdC1uYXZpZ2F0aW9uL25hdGl2ZSc7XHJcbmltcG9ydCB7XHJcbiAgQ2FyZENvbnRhaW5lcixcclxuICBDYXJkRGl2aWRlcixcclxuICBDYXJkU3ViVGl0bGUsXHJcbiAgQ2FyZFRpdGxlLFxyXG4gIFNpbmdsZUFydGljbGVDYXJkLFxyXG59IGZyb20gJy4vQ2FyZEFydGljbGVDb21wb25lbnQuc3R5bGVzJztcclxuaW1wb3J0IHtyZWxhdGl2ZVRpbWVGcm9tRWxhcHNlZH0gZnJvbSAnLi4vLi4vdXRpbHMvY29udmVydFRpbWUnO1xyXG5pbXBvcnQge1xyXG4gIENhcmRBcnRpY2xlQ29tcG9uZW50UHJvcHMsXHJcbiAgTmF2aWdhdGlvblR5cGVzLFxyXG59IGZyb20gJy4vQ2FyZEFydGljbGVDb21wb25lbnQudHlwZXMnO1xyXG5pbXBvcnQge0J1dHRvbiwgTGlzdEl0ZW19IGZyb20gJ0BybmV1aS90aGVtZWQnO1xyXG5pbXBvcnQgQXN5bmNTdG9yYWdlIGZyb20gJ0ByZWFjdC1uYXRpdmUtYXN5bmMtc3RvcmFnZS9hc3luYy1zdG9yYWdlJztcclxuaW1wb3J0IHtBcnRpY2xlfSBmcm9tICcuLi9BcnRpY2xlTGlzdENvbXBvbmVudC9BcnRpY2xlTGlzdC50eXBlcyc7XHJcblxyXG5jb25zdCBkZWxldGVBcnRpY2xlID0gYXN5bmMgKFNpbmdsZUFydGljbGU6IEFydGljbGUsIGZldGNoTGlzdDogKCkgPT4gdm9pZCkgPT4ge1xyXG4gIGNvbnN0IGN1cnJlbnRBcnJheSA9XHJcbiAgICBKU09OLnBhcnNlKChhd2FpdCBBc3luY1N0b3JhZ2UuZ2V0SXRlbSgnZGVsZXRlZEFydGljbGVzJykpIGFzIHN0cmluZykgfHwgW107XHJcbiAgY3VycmVudEFycmF5LnB1c2goU2luZ2xlQXJ0aWNsZS5zdG9yeV9pZCk7XHJcbiAgYXdhaXQgQXN5bmNTdG9yYWdlLnNldEl0ZW0oJ2RlbGV0ZWRBcnRpY2xlcycsIEpTT04uc3RyaW5naWZ5KGN1cnJlbnRBcnJheSkpO1xyXG5cclxuICBmZXRjaExpc3QoKTtcclxufTtcclxuXHJcbmNvbnN0IFN3aXBlQWN0aW9uID0gKHtTaW5nbGVBcnRpY2xlLCBmZXRjaExpc3R9OiBDYXJkQXJ0aWNsZUNvbXBvbmVudFByb3BzKSA9PiAoXHJcbiAgPEJ1dHRvblxyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHJlYWN0LW5hdGl2ZS9uby1pbmxpbmUtc3R5bGVzXHJcbiAgICBjb250YWluZXJTdHlsZT17e1xyXG4gICAgICBmbGV4OiAxLFxyXG4gICAgICBqdXN0aWZ5Q29udGVudDogJ2NlbnRlcicsXHJcbiAgICAgIGJhY2tncm91bmRDb2xvcjogJyNmNGY0ZjQnLFxyXG4gICAgfX1cclxuICAgIHR5cGU9XCJjbGVhclwiXHJcbiAgICBpY29uPXt7bmFtZTogJ2RlbGV0ZS1vdXRsaW5lJ319XHJcbiAgICBvblByZXNzPXthc3luYyAoKSA9PiBhd2FpdCBkZWxldGVBcnRpY2xlKFNpbmdsZUFydGljbGUsIGZldGNoTGlzdCl9XHJcbiAgLz5cclxuKTtcclxuXHJcbmNvbnN0IENhcmRBcnRpY2xlQ29tcG9uZW50ID0gKHtcclxuICBTaW5nbGVBcnRpY2xlLFxyXG4gIGZldGNoTGlzdCxcclxufTogQ2FyZEFydGljbGVDb21wb25lbnRQcm9wcykgPT4ge1xyXG4gIGNvbnN0IG5hdmlnYXRpb24gPSB1c2VOYXZpZ2F0aW9uPE5hdmlnYXRpb25Qcm9wPE5hdmlnYXRpb25UeXBlcz4+KCk7XHJcblxyXG4gIGNvbnN0IGhhbmRsZVByZXNzID0gKCkgPT4ge1xyXG4gICAgbmF2aWdhdGlvbi5uYXZpZ2F0ZSgnU2luZ2xlQXJ0aWNsZVNjcmVlbicsIHtcclxuICAgICAgdXJsOiBTaW5nbGVBcnRpY2xlLnVybCxcclxuICAgIH0pO1xyXG4gIH07XHJcblxyXG4gIHJldHVybiAoXHJcbiAgICA8TGlzdEl0ZW0uU3dpcGVhYmxlXHJcbiAgICAgIHJpZ2h0V2lkdGg9ezkwfVxyXG4gICAgICByaWdodENvbnRlbnQ9e1N3aXBlQWN0aW9uKHtTaW5nbGVBcnRpY2xlLCBmZXRjaExpc3R9KX0+XHJcbiAgICAgIDxDYXJkQ29udGFpbmVyIG9uUHJlc3M9e2hhbmRsZVByZXNzfT5cclxuICAgICAgICA8U2luZ2xlQXJ0aWNsZUNhcmQ+XHJcbiAgICAgICAgICA8Q2FyZFRpdGxlPlxyXG4gICAgICAgICAgICB7U2luZ2xlQXJ0aWNsZS50aXRsZSB8fCBTaW5nbGVBcnRpY2xlLnN0b3J5X3RpdGxlfVxyXG4gICAgICAgICAgPC9DYXJkVGl0bGU+XHJcbiAgICAgICAgICA8Q2FyZERpdmlkZXIgLz5cclxuICAgICAgICAgIDxDYXJkU3ViVGl0bGU+XHJcbiAgICAgICAgICAgIHtTaW5nbGVBcnRpY2xlLmF1dGhvcn0gLXsnICd9XHJcbiAgICAgICAgICAgIHtyZWxhdGl2ZVRpbWVGcm9tRWxhcHNlZChTaW5nbGVBcnRpY2xlLmNyZWF0ZWRfYXQpfVxyXG4gICAgICAgICAgPC9DYXJkU3ViVGl0bGU+XHJcbiAgICAgICAgPC9TaW5nbGVBcnRpY2xlQ2FyZD5cclxuICAgICAgPC9DYXJkQ29udGFpbmVyPlxyXG4gICAgPC9MaXN0SXRlbS5Td2lwZWFibGU+XHJcbiAgKTtcclxufTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IENhcmRBcnRpY2xlQ29tcG9uZW50O1xyXG4iXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFBLE1BQUEsR0FBQUMsc0JBQUEsQ0FBQUMsT0FBQTtBQUNBLElBQUFDLE9BQUEsR0FBQUQsT0FBQTtBQUNBLElBQUFFLHFCQUFBLEdBQUFGLE9BQUE7QUFPQSxJQUFBRyxZQUFBLEdBQUFILE9BQUE7QUFLQSxJQUFBSSxPQUFBLEdBQUFKLE9BQUE7QUFDQSxJQUFBSyxhQUFBLEdBQUFOLHNCQUFBLENBQUFDLE9BQUE7QUFBcUUsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBR3JFLElBQU1PLGFBQWE7RUFBQSxJQUFBQyxJQUFBLE9BQUFDLGtCQUFBLENBQUFDLE9BQUEsRUFBRyxXQUFPQyxhQUFzQixFQUFFQyxTQUFxQixFQUFLO0lBQzdFLElBQU1DLFlBQVksR0FDaEJDLElBQUksQ0FBQ0MsS0FBSyxPQUFRQyxxQkFBWSxDQUFDQyxPQUFPLENBQUMsaUJBQWlCLENBQVksQ0FBQyxJQUFJLEVBQUU7SUFDN0VKLFlBQVksQ0FBQ0ssSUFBSSxDQUFDUCxhQUFhLENBQUNRLFFBQVEsQ0FBQztJQUN6QyxNQUFNSCxxQkFBWSxDQUFDSSxPQUFPLENBQUMsaUJBQWlCLEVBQUVOLElBQUksQ0FBQ08sU0FBUyxDQUFDUixZQUFZLENBQUMsQ0FBQztJQUUzRUQsU0FBUyxDQUFDLENBQUM7RUFDYixDQUFDO0VBQUEsZ0JBUEtMLGFBQWFBLENBQUFlLEVBQUEsRUFBQUMsR0FBQTtJQUFBLE9BQUFmLElBQUEsQ0FBQWdCLEtBQUEsT0FBQUMsU0FBQTtFQUFBO0FBQUEsR0FPbEI7QUFFRCxJQUFNQyxXQUFXLEdBQUcsU0FBZEEsV0FBV0EsQ0FBQUMsS0FBQTtFQUFBLElBQUtoQixhQUFhLEdBQUFnQixLQUFBLENBQWJoQixhQUFhO0lBQUVDLFNBQVMsR0FBQWUsS0FBQSxDQUFUZixTQUFTO0VBQUEsT0FDNUMsSUFBQU4sV0FBQSxDQUFBc0IsR0FBQSxFQUFDeEIsT0FBQSxDQUFBeUIsTUFBTTtJQUVMQyxjQUFjLEVBQUU7TUFDZEMsSUFBSSxFQUFFLENBQUM7TUFDUEMsY0FBYyxFQUFFLFFBQVE7TUFDeEJDLGVBQWUsRUFBRTtJQUNuQixDQUFFO0lBQ0ZDLElBQUksRUFBQyxPQUFPO0lBQ1pDLElBQUksRUFBRTtNQUFDQyxJQUFJLEVBQUU7SUFBZ0IsQ0FBRTtJQUMvQkMsT0FBTyxNQUFBNUIsa0JBQUEsQ0FBQUMsT0FBQSxFQUFFO01BQUEsYUFBa0JILGFBQWEsQ0FBQ0ksYUFBYSxFQUFFQyxTQUFTLENBQUM7SUFBQTtFQUFDLENBQ3BFLENBQUM7QUFBQSxDQUNIO0FBRUQsSUFBTTBCLG9CQUFvQixHQUFHLFNBQXZCQSxvQkFBb0JBLENBQUFDLEtBQUEsRUFHTztFQUFBLElBRi9CNUIsYUFBYSxHQUFBNEIsS0FBQSxDQUFiNUIsYUFBYTtJQUNiQyxTQUFTLEdBQUEyQixLQUFBLENBQVQzQixTQUFTO0VBRVQsSUFBTTRCLFVBQVUsR0FBRyxJQUFBQyxxQkFBYSxFQUFrQyxDQUFDO0VBRW5FLElBQU1DLFdBQVcsR0FBRyxTQUFkQSxXQUFXQSxDQUFBLEVBQVM7SUFDeEJGLFVBQVUsQ0FBQ0csUUFBUSxDQUFDLHFCQUFxQixFQUFFO01BQ3pDQyxHQUFHLEVBQUVqQyxhQUFhLENBQUNpQztJQUNyQixDQUFDLENBQUM7RUFDSixDQUFDO0VBRUQsT0FDRSxJQUFBdEMsV0FBQSxDQUFBc0IsR0FBQSxFQUFDeEIsT0FBQSxDQUFBeUMsUUFBUSxDQUFDQyxTQUFTO0lBQ2pCQyxVQUFVLEVBQUUsRUFBRztJQUNmQyxZQUFZLEVBQUV0QixXQUFXLENBQUM7TUFBQ2YsYUFBYSxFQUFiQSxhQUFhO01BQUVDLFNBQVMsRUFBVEE7SUFBUyxDQUFDLENBQUU7SUFBQXFDLFFBQUEsRUFDdEQsSUFBQTNDLFdBQUEsQ0FBQXNCLEdBQUEsRUFBQzFCLHFCQUFBLENBQUFnRCxhQUFhO01BQUNiLE9BQU8sRUFBRUssV0FBWTtNQUFBTyxRQUFBLEVBQ2xDLElBQUEzQyxXQUFBLENBQUE2QyxJQUFBLEVBQUNqRCxxQkFBQSxDQUFBa0QsaUJBQWlCO1FBQUFILFFBQUEsR0FDaEIsSUFBQTNDLFdBQUEsQ0FBQXNCLEdBQUEsRUFBQzFCLHFCQUFBLENBQUFtRCxTQUFTO1VBQUFKLFFBQUEsRUFDUHRDLGFBQWEsQ0FBQzJDLEtBQUssSUFBSTNDLGFBQWEsQ0FBQzRDO1FBQVcsQ0FDeEMsQ0FBQyxFQUNaLElBQUFqRCxXQUFBLENBQUFzQixHQUFBLEVBQUMxQixxQkFBQSxDQUFBc0QsV0FBVyxJQUFFLENBQUMsRUFDZixJQUFBbEQsV0FBQSxDQUFBNkMsSUFBQSxFQUFDakQscUJBQUEsQ0FBQXVELFlBQVk7VUFBQVIsUUFBQSxHQUNWdEMsYUFBYSxDQUFDK0MsTUFBTSxFQUFDLElBQUUsRUFBQyxHQUFHLEVBQzNCLElBQUFDLG9DQUF1QixFQUFDaEQsYUFBYSxDQUFDaUQsVUFBVSxDQUFDO1FBQUEsQ0FDdEMsQ0FBQztNQUFBLENBQ0U7SUFBQyxDQUNQO0VBQUMsQ0FDRSxDQUFDO0FBRXpCLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBQUFDLE9BQUEsQ0FBQXBELE9BQUEsR0FFYTRCLG9CQUFvQiIsImlnbm9yZUxpc3QiOltdfQ==